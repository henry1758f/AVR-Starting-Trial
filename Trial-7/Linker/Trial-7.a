;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : Trial-7
;Version : 0.1
;Date    : 2015/5/13
;Author  : henry1758f@gmail.com
;Company : KUAS EE501
;Comments:
;
;
;Chip type               : AT90S8535
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 128
;*****************************************************/
;
;#include <90s8535.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x30
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000007 VOL: 0
	#endif
;PCODE: $00000008 VOL: 0
;PCODE: $00000009 VOL: 0
;#include <stdio.h>
;#include <stdlib.h>
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;#include <delay.h>
;/*TIMER SETTING CONFIG DEFINE*/
;#define STOP 0x00
;#define FOSC1 0x01
;#define FOSC8 0x02
;#define FOSC64 0x03
;#define FOSC256 0x04
;#define FOSC1024 0x05
;/*TIMER0 SET*/
;#define T0SET FOSC8
;/*OTHER Definitions*/
;#define LCDbackground PORTD.PORTD6
;#define ADD 11
;#define DEC 12
;#define MUL 13
;#define DIV 14
;#define EQU 15
;
;//Global variables define
;unsigned char Keypad[16]={0xEE,0xED,0xEB,0xE7,
;                          0xDE,0xDD,0xDB,0xD7,
;                          0xBE,0xBD,0xBB,0xB7,
;                          0x7E,0x7D,0x7B,0x77};

	.DSEG
;unsigned char fnc=0,num_pointer=0,
;              dotA=0xFF, dotB=0xFF, dotC=0;
;double numA=0,numB=0,numC;
;unsigned char pressed=0xFF;
;
;
;/*Function Declear*/
;unsigned char input(unsigned char);
;void caculate(unsigned char );
;unsigned char printfnc(unsigned char);
;
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 0042 {

	.CSEG
;PCODE: $0000000A VOL: 0
;PCODE: $0000000B VOL: 0
; 0000 0043 // Place your code here
; 0000 0044 fnc=0;
;PCODE: $0000000C VOL: 0
; 0000 0045 num_pointer=0;
;PCODE: $0000000D VOL: 0
; 0000 0046 dotA=0xFF;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0047 dotB=0xFF;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0048 dotC=0;
;PCODE: $00000012 VOL: 0
; 0000 0049 numA=0;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 004A numB=0;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 004B numC=0;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 004C lcd_clear();
;PCODE: $00000019 VOL: 0
; 0000 004D 
; 0000 004E 
; 0000 004F }
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0053 {
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0054     unsigned char kbsw[4]={0xF7,0xFB,0xFD,0xFE};
; 0000 0055     unsigned char i,j,error,none=0;
; 0000 0056     unsigned char num[5];
; 0000 0057     for(i=0;i<4;i++)
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;	kbsw -> Y+9
;	i -> R16
;	j -> R17
;	error -> R18
;	none -> R19
;	num -> Y+4
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0058     {
; 0000 0059         PORTA=kbsw[i];
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 005A         for(j=0;j<16;j++)
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 005B         {
; 0000 005C             if(PINA==Keypad[j])
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 005D             {
; 0000 005E                 if(pressed!=j)
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 005F                 {
; 0000 0060                     error = input(j);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0061                 }
; 0000 0062                 else
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0063                 {
; 0000 0064                     return;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0065                 }
;PCODE: $00000057 VOL: 0
; 0000 0066                 pressed = j;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0067                 TCNT0=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0068                 return;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0069             }
; 0000 006A         }
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 006B     }
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 006C     if(none==0)
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 006D     {
; 0000 006E         pressed=0xFF;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 006F     }
; 0000 0070 
; 0000 0071 
; 0000 0072     TCNT0=0x00;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0073 }
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 0078 {
;PCODE: $00000077 VOL: 0
; 0000 0079 // Declare your local variables here
; 0000 007A 
; 0000 007B // Input/Output Ports initialization
; 0000 007C // Port A initialization
; 0000 007D // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
; 0000 007E // State7=0 State6=0 State5=0 State4=0 State3=T State2=T State1=T State0=T
; 0000 007F PORTA=0xF0;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0080 DDRA=0x0F;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0081 
; 0000 0082 // Port B initialization
; 0000 0083 // Func7=In Func6=In Func5=In Func4=In Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0084 // State7=T State6=T State5=T State4=T State3=0 State2=0 State1=0 State0=0
; 0000 0085 PORTB=0x00;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0086 DDRB=0x0F;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0087 
; 0000 0088 // Port C initialization
; 0000 0089 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 008A // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 008B PORTC=0x00;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 008C DDRC=0x00;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 008D 
; 0000 008E // Port D initialization
; 0000 008F // Func7=In Func6=Out Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=Out
; 0000 0090 // State7=T State6=1 State5=0 State4=0 State3=T State2=T State1=T State0=1
; 0000 0091 PORTD=0x41;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0092 DDRD=0x71;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0093 
; 0000 0094 // Timer/Counter 0 initialization
; 0000 0095 // Clock source: System Clock
; 0000 0096 // Clock value: Timer 0 Stopped
; 0000 0097 TCCR0=STOP;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0098 TCNT0=0x00;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0099 
; 0000 009A // Timer/Counter 1 initialization
; 0000 009B // Clock source: System Clock
; 0000 009C // Clock value: Timer1 Stopped
; 0000 009D // Mode: Normal top=0xFFFF
; 0000 009E // OC1A output: Discon.
; 0000 009F // OC1B output: Discon.
; 0000 00A0 // Noise Canceler: Off
; 0000 00A1 // Input Capture on Falling Edge
; 0000 00A2 // Timer1 Overflow Interrupt: Off
; 0000 00A3 // Input Capture Interrupt: Off
; 0000 00A4 // Compare A Match Interrupt: Off
; 0000 00A5 // Compare B Match Interrupt: Off
; 0000 00A6 TCCR1A=0x00;
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 00A7 TCCR1B=0x00;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 00A8 TCNT1H=0x00;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 00A9 TCNT1L=0x00;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 00AA OCR1AH=0x00;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 00AB OCR1AL=0x00;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 00AC OCR1BH=0x00;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 00AD OCR1BL=0x00;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 00AE 
; 0000 00AF // Timer/Counter 2 initialization
; 0000 00B0 // Clock source: System Clock
; 0000 00B1 // Clock value: Timer2 Stopped
; 0000 00B2 // Mode: Normal top=0xFF
; 0000 00B3 // OC2 output: Disconnected
; 0000 00B4 ASSR=0x00;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 00B5 TCCR2=0x00;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 00B6 TCNT2=0x00;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 00B7 OCR2=0x00;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 00B8 
; 0000 00B9 // External Interrupt(s) initialization
; 0000 00BA // INT0: On
; 0000 00BB // INT0 Mode: Rising Edge
; 0000 00BC // INT1: Off
; 0000 00BD GIMSK=0x40;
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 00BE MCUCR=0x03;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 00BF GIFR=0x40;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 00C0 
; 0000 00C1 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 00C2 TIMSK=0x01;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 00C3 
; 0000 00C4 // UART initialization
; 0000 00C5 // UART disabled
; 0000 00C6 UCR=0x00;
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 00C7 
; 0000 00C8 // Analog Comparator initialization
; 0000 00C9 // Analog Comparator: Off
; 0000 00CA // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 00CB ACSR=0x80;
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 00CC 
; 0000 00CD // ADC initialization
; 0000 00CE // ADC disabled
; 0000 00CF ADCSR=0x00;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 00D0 
; 0000 00D1 // SPI initialization
; 0000 00D2 // SPI disabled
; 0000 00D3 SPCR=0x00;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 00D4 
; 0000 00D5 // Alphanumeric LCD initialization
; 0000 00D6 // Connections are specified in the
; 0000 00D7 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 00D8 // RS - PORTD Bit 5
; 0000 00D9 // RD - PORTD Bit 4
; 0000 00DA // EN - PORTD Bit 0
; 0000 00DB // D4 - PORTB Bit 0
; 0000 00DC // D5 - PORTB Bit 1
; 0000 00DD // D6 - PORTB Bit 2
; 0000 00DE // D7 - PORTB Bit 3
; 0000 00DF // Characters/line: 16
; 0000 00E0 lcd_init(16);
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 00E1 
; 0000 00E2 // Global enable interrupts
; 0000 00E3 #asm("sei")
;PCODE: $000000B6 VOL: 0
	sei
;PCODE: $000000B7 VOL: 0
; 0000 00E4 lcd_gotoxy(0,1);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 00E5 lcd_putsf("= Verison 0.1 =");
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 00E6 lcd_gotoxy(2,0);
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 00E7 lcd_putsf("Calculactor");
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 00E8 delay_ms(1000);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 00E9 lcd_clear();
;PCODE: $000000C8 VOL: 0
; 0000 00EA TCCR0=FOSC1024;
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 00EB 
; 0000 00EC while (1)
;PCODE: $000000CB VOL: 0
; 0000 00ED       {
; 0000 00EE 
; 0000 00EF             while(1);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 00F0 
; 0000 00F1       }
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 00F2 }
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;
;
;unsigned char input(unsigned char KEY)
; 0000 00F6 {
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 00F7     unsigned char num[32];
; 0000 00F8     unsigned char i=0;
; 0000 00F9     unsigned char dotA_trans,dotB_trans;
; 0000 00FA     double KEY_dot=KEY;
; 0000 00FB     if(dotA==0xFF)
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;	KEY -> Y+39
;	num -> Y+7
;	i -> R16
;	dotA_trans -> R17
;	dotB_trans -> R18
;	KEY_dot -> Y+3
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00FC     {
; 0000 00FD         dotA_trans=0;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 00FE     }
; 0000 00FF     else
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 0100     {
; 0000 0101         dotA_trans=dotA;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 0102     }
;PCODE: $000000E7 VOL: 0
; 0000 0103     if(dotB==0xFF)
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 0104     {
; 0000 0105         dotB_trans=0;
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 0106     }
; 0000 0107     else
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 0108     {
; 0000 0109         dotB_trans=dotB;
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 010A     }
;PCODE: $000000F1 VOL: 0
; 0000 010B 
; 0000 010C     if(num_pointer==0)              //numA Input
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 010D     {
; 0000 010E         /*numA Input*/
; 0000 010F         if(KEY<10 && dotA==0xFF)
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 0110         {
; 0000 0111             numA=numA*10+KEY;
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 0112             //sprintf(num,"%f",numA);
; 0000 0113             ftoa(numA,dotA_trans,num);
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 0114             lcd_gotoxy(0,0);
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0115             lcd_puts(num);
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 0116         }
; 0000 0117         else if(KEY<10 && dotA!=0xFF)
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 0118         {
; 0000 0119             for(i=0;i<dotA_trans;i++)
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 011A             {
; 0000 011B                 KEY_dot/=10;
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 011C             }
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 011D             numA=(numA+KEY_dot);
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 011E             //sprintf(num,"%f",numA);
; 0000 011F             dotA++;
;PCODE: $00000134 VOL: 0
; 0000 0120             ftoa(numA,dotA_trans,num);
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 0121             lcd_gotoxy(0,0);
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 0122             lcd_puts(num);
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 0123         }
; 0000 0124         else if(KEY==10 && dotA==0xFF)
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 0125         {
; 0000 0126             ftoa(numA,dotA_trans,num);
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 0127             dotA=1;
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 0128             lcd_gotoxy(0,0);
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0129             lcd_puts(num);
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 012A             lcd_putchar('.');
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 012B         }
; 0000 012C         else if(KEY==ADD)
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 012D         {
; 0000 012E             lcd_gotoxy(15,0);
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 012F             //lcd_puts(num);
; 0000 0130             lcd_putchar('+');
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 0131             fnc=ADD;
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 0132             num_pointer=1;
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 0133         }
; 0000 0134         else if(KEY==DEC)
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 0135         {
; 0000 0136             lcd_gotoxy(15,0);
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 0137             //lcd_puts(num);
; 0000 0138             lcd_putchar('-');
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 0139             fnc=DEC;
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 013A             num_pointer=1;
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 013B         }
; 0000 013C         else if(KEY==MUL)
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 013D         {
; 0000 013E             lcd_gotoxy(15,0);
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 013F             //lcd_puts(num);
; 0000 0140             lcd_putchar('*');
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 0141             fnc=MUL;
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 0142             num_pointer=1;
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 0143         }
; 0000 0144         else if(KEY==DIV)
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 0145         {
; 0000 0146             lcd_gotoxy(15,0);
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 0147             //lcd_puts(num);
; 0000 0148             lcd_putchar('/');
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 0149             fnc=DIV;
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 014A             num_pointer=1;
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 014B         }
; 0000 014C         else if(KEY==EQU)
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 014D         {
; 0000 014E             lcd_gotoxy(15,0);
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 014F             //lcd_puts(num);
; 0000 0150             lcd_putchar('=');
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 0151             num_pointer=2;
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 0152             numC=numA;
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 0153             ftoa(numC,dotA_trans,num);
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 0154             lcd_gotoxy(0,1);
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 0155             lcd_puts(num);
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 0156             fnc=EQU;
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0000 0157         }
; 0000 0158 
; 0000 0159     }
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0000 015A     else if(num_pointer==1)             //numB Input
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0000 015B     {
; 0000 015C         /*numB Input*/
; 0000 015D         if(KEY<10 && dotB==0xFF)
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 015E         {
; 0000 015F             numB=numB*10+KEY;
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 0160             //sprintf(num,"%f",numA);
; 0000 0161             ftoa(numB,dotB_trans,num);
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 0162             lcd_gotoxy(0,1);
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 0163             lcd_puts(num);
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 0164         }
; 0000 0165         else if(KEY<10 && dotB!=0xFF)
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 0166         {
; 0000 0167             for(i=0;i<dotB_trans;i++)
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 0168             {
; 0000 0169                 KEY_dot/=10;
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0000 016A             }
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 016B             numB=(numB+KEY_dot);
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
; 0000 016C             //sprintf(num,"%f",numA);
; 0000 016D             dotB++;
;PCODE: $00000200 VOL: 0
; 0000 016E             ftoa(numB,dotB_trans,num);
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 016F             lcd_gotoxy(0,1);
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 0170             lcd_puts(num);
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0000 0171         }
; 0000 0172         else if(KEY==10 && dotB==0xFF)
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0000 0173         {
; 0000 0174             ftoa(numB,dotB_trans,num);
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 0175             dotB=1;
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 0176             lcd_gotoxy(0,1);
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
; 0000 0177             lcd_puts(num);
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
; 0000 0178             lcd_putchar('.');
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 0179         }
; 0000 017A         else if(KEY==ADD)
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
; 0000 017B         {
; 0000 017C             caculate(fnc);
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 017D             lcd_clear();
;PCODE: $0000022E VOL: 0
; 0000 017E             lcd_gotoxy(0,0);
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 017F             ftoa(numC,dotC,num);
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
; 0000 0180             lcd_puts(num);
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
; 0000 0181             numB=0;dotB=0;numA=numC;
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
; 0000 0182 
; 0000 0183             lcd_gotoxy(15,0);
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
; 0000 0184             //lcd_puts(num);
; 0000 0185             lcd_putchar('+');
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0000 0186             num_pointer=1;
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0000 0187             fnc=ADD;
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
; 0000 0188         }
; 0000 0189         else if(KEY==DEC)
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
; 0000 018A         {
; 0000 018B             caculate(fnc);
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
; 0000 018C             lcd_clear();
;PCODE: $00000250 VOL: 0
; 0000 018D             lcd_gotoxy(0,0);
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
; 0000 018E             ftoa(numC,dotC,num);
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
; 0000 018F             lcd_puts(num);
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
; 0000 0190             numB=0;dotB=0;numA=numC;
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 0191 
; 0000 0192             lcd_gotoxy(15,0);
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
; 0000 0193             //lcd_puts(num);
; 0000 0194             lcd_putchar('-');
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
; 0000 0195             num_pointer=1;
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
; 0000 0196             fnc=DEC;
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
; 0000 0197         }
; 0000 0198         else if(KEY==MUL)
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
; 0000 0199         {
; 0000 019A             caculate(fnc);
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
; 0000 019B             lcd_clear();
;PCODE: $00000272 VOL: 0
; 0000 019C             lcd_gotoxy(0,0);
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 019D             ftoa(numC,dotC,num);
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
; 0000 019E             lcd_puts(num);
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 019F             numB=0;dotB=0;numA=numC;
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
; 0000 01A0 
; 0000 01A1             lcd_gotoxy(15,0);
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
; 0000 01A2             //lcd_puts(num);
; 0000 01A3             lcd_putchar('*');
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
; 0000 01A4             num_pointer=1;
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
; 0000 01A5             fnc=MUL;
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0000 01A6         }
; 0000 01A7         else if(KEY==DIV)
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
; 0000 01A8         {
; 0000 01A9             caculate(fnc);
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
; 0000 01AA             lcd_clear();
;PCODE: $00000294 VOL: 0
; 0000 01AB             lcd_gotoxy(0,0);
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
; 0000 01AC             ftoa(numC,dotC,num);
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
; 0000 01AD             lcd_puts(num);
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
; 0000 01AE             numB=0;dotB=0;numA=numC;
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
; 0000 01AF 
; 0000 01B0             lcd_gotoxy(15,0);
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
; 0000 01B1             //lcd_puts(num);
; 0000 01B2             lcd_putchar('/');
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
; 0000 01B3             num_pointer=1;
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
; 0000 01B4             fnc=DIV;
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
; 0000 01B5         }
; 0000 01B6         else if(KEY==EQU)
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
; 0000 01B7         {
; 0000 01B8             if(dotA_trans!=0)
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
; 0000 01B9             {
; 0000 01BA                 dotA_trans--;
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
; 0000 01BB             }
; 0000 01BC             if(dotB_trans!=0)
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
; 0000 01BD             {
; 0000 01BE                 dotB_trans--;
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
; 0000 01BF             }
; 0000 01C0             lcd_clear();
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 01C1             ftoa(numA,dotA_trans,num);
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 01C2             lcd_gotoxy(0,0);
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
; 0000 01C3             lcd_puts(num);
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
; 0000 01C4             lcd_putchar(printfnc(fnc));
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
; 0000 01C5             ftoa(numB,dotB_trans,num);
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
; 0000 01C6             lcd_puts(num);
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
; 0000 01C7 
; 0000 01C8 
; 0000 01C9             lcd_gotoxy(15,0);
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
; 0000 01CA             //lcd_puts(num);
; 0000 01CB             lcd_putchar('=');
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
; 0000 01CC             num_pointer=2;
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
; 0000 01CD             caculate(fnc);
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
; 0000 01CE             ftoa(numC,dotC,num);
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
; 0000 01CF             lcd_gotoxy(0,1);
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
; 0000 01D0             lcd_puts(num);
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
; 0000 01D1         }
; 0000 01D2     }
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
; 0000 01D3 
; 0000 01D4     else if(num_pointer==2)              //numC Result
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
; 0000 01D5     {
; 0000 01D6         /*numC Result*/
; 0000 01D7         if(KEY<10)
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
; 0000 01D8         {
; 0000 01D9             fnc=0;
;PCODE: $000002FA VOL: 0
; 0000 01DA             num_pointer=0;
;PCODE: $000002FB VOL: 0
; 0000 01DB             dotA=0xFF;
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
; 0000 01DC             dotB=0xFF;
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
; 0000 01DD             dotC=0;
;PCODE: $00000300 VOL: 0
; 0000 01DE             dotA_trans=0;
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
; 0000 01DF             dotB_trans=0;
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
; 0000 01E0             numA=0;
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
; 0000 01E1             numB=0;
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
; 0000 01E2             numC=0;
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
; 0000 01E3             lcd_clear();
;PCODE: $0000030B VOL: 0
; 0000 01E4 
; 0000 01E5             numA=numA*10+KEY;
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
; 0000 01E6             ftoa(numA,dotA_trans,num);
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
; 0000 01E7             lcd_gotoxy(0,0);
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
; 0000 01E8             lcd_puts(num);
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
; 0000 01E9         }
; 0000 01EA         else if(KEY==10)
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
; 0000 01EB         {
; 0000 01EC             numA=numC;
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
; 0000 01ED             fnc=0;
;PCODE: $00000327 VOL: 0
; 0000 01EE             num_pointer=0;
;PCODE: $00000328 VOL: 0
; 0000 01EF             dotA=1;
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
; 0000 01F0             dotB=0xFF;
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
; 0000 01F1             dotC=0;
;PCODE: $0000032D VOL: 0
; 0000 01F2             dotA_trans=0;
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
; 0000 01F3             dotB_trans=0;
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
; 0000 01F4             numB=0;
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
; 0000 01F5             numC=0;
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
; 0000 01F6             lcd_clear();
;PCODE: $00000336 VOL: 0
; 0000 01F7 
; 0000 01F8 
; 0000 01F9 
; 0000 01FA             ftoa(numA,dotA_trans,num);
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
; 0000 01FB             dotA=1;
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
; 0000 01FC             lcd_gotoxy(0,0);
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
; 0000 01FD             lcd_puts(num);
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
; 0000 01FE             lcd_putchar('.');
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
; 0000 01FF         }
; 0000 0200         else if(KEY==ADD)
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
; 0000 0201         {
; 0000 0202             numA=numC;
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
; 0000 0203             fnc=ADD;
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
; 0000 0204             num_pointer=1;
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
; 0000 0205             dotA=dotC;
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
; 0000 0206             dotB=0xFF;
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
; 0000 0207             dotA_trans=dotC;
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
; 0000 0208             dotC=0;
;PCODE: $00000357 VOL: 0
; 0000 0209             dotB_trans=0;
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
; 0000 020A             numB=0;
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
; 0000 020B             numC=0;
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
; 0000 020C             lcd_clear();
;PCODE: $0000035E VOL: 0
; 0000 020D 
; 0000 020E 
; 0000 020F             ftoa(numA,dotA,num);
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
; 0000 0210             dotA=1;
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
; 0000 0211             lcd_gotoxy(0,0);
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
; 0000 0212             lcd_puts(num);
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
; 0000 0213 
; 0000 0214             lcd_gotoxy(15,0);
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
; 0000 0215             //lcd_puts(num);
; 0000 0216             lcd_putchar('+');
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
; 0000 0217             fnc=ADD;
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
; 0000 0218             num_pointer=1;
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
; 0000 0219         }
; 0000 021A         else if(KEY==DEC)
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
; 0000 021B         {
; 0000 021C             numA=numC;
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
; 0000 021D             fnc=DEC;
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
; 0000 021E             num_pointer=1;
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
; 0000 021F             dotA=dotC;
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
; 0000 0220             dotB=0xFF;
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
; 0000 0221             dotA_trans=dotC;
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
; 0000 0222             dotC=0;
;PCODE: $00000387 VOL: 0
; 0000 0223             dotB_trans=0;
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
; 0000 0224             numB=0;
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
; 0000 0225             numC=0;
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
; 0000 0226             lcd_clear();
;PCODE: $0000038E VOL: 0
; 0000 0227 
; 0000 0228 
; 0000 0229             ftoa(numA,dotA_trans,num);
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
; 0000 022A             dotA=1;
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
; 0000 022B             lcd_gotoxy(0,0);
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
; 0000 022C             lcd_puts(num);
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
; 0000 022D 
; 0000 022E             lcd_gotoxy(15,0);
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
; 0000 022F             //lcd_puts(num);
; 0000 0230             lcd_putchar('-');
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
; 0000 0231             fnc=DEC;
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
; 0000 0232             num_pointer=1;
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
; 0000 0233         }
; 0000 0234         else if(KEY==MUL)
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
; 0000 0235         {
; 0000 0236             numA=numC;
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
; 0000 0237             fnc=MUL;
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
; 0000 0238             num_pointer=1;
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
; 0000 0239             dotA=dotC;
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
; 0000 023A             dotB=0xFF;
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
; 0000 023B             dotA_trans=dotC;
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
; 0000 023C             dotC=0;
;PCODE: $000003B7 VOL: 0
; 0000 023D             dotB_trans=0;
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
; 0000 023E             numB=0;
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
; 0000 023F             numC=0;
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
; 0000 0240             lcd_clear();
;PCODE: $000003BE VOL: 0
; 0000 0241 
; 0000 0242 
; 0000 0243             ftoa(numA,dotA_trans,num);
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
; 0000 0244             dotA=1;
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
; 0000 0245             lcd_gotoxy(0,0);
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
; 0000 0246             lcd_puts(num);
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
; 0000 0247 
; 0000 0248             lcd_gotoxy(15,0);
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
; 0000 0249             //lcd_puts(num);
; 0000 024A             lcd_putchar('*');
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
; 0000 024B             fnc=MUL;
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
; 0000 024C             num_pointer=1;
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
; 0000 024D         }
; 0000 024E         else if(KEY==DIV)
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
; 0000 024F         {
; 0000 0250             numA=numC;
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
; 0000 0251             fnc=DIV;
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
; 0000 0252             num_pointer=1;
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
; 0000 0253             dotA=dotC;
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
; 0000 0254             dotB=0xFF;
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
; 0000 0255             dotA_trans=dotC;
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
; 0000 0256             dotC=0;
;PCODE: $000003E7 VOL: 0
; 0000 0257             dotB_trans=0;
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
; 0000 0258             numB=0;
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
; 0000 0259             numC=0;
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
; 0000 025A             lcd_clear();
;PCODE: $000003EE VOL: 0
; 0000 025B 
; 0000 025C             lcd_gotoxy(15,0);
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
; 0000 025D             //lcd_puts(num);
; 0000 025E             lcd_putchar('/');
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
; 0000 025F             fnc=DIV;
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
; 0000 0260             num_pointer=1;
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
; 0000 0261         }
; 0000 0262         else if(KEY==EQU)
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
; 0000 0263         {   /*
; 0000 0264             lcd_gotoxy(15,0);
; 0000 0265             //lcd_puts(num);
; 0000 0266             lcd_putchar('=');
; 0000 0267             num_pointer=2;
; 0000 0268             numA=numC;
; 0000 0269             ftoa(numC,dotC,num);
; 0000 026A             lcd_gotoxy(0,1);
; 0000 026B             lcd_puts(num);
; 0000 026C             fnc=EQU;*/
; 0000 026D         }
; 0000 026E 
; 0000 026F     }
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
; 0000 0270 
; 0000 0271 }
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;
;void caculate(unsigned char f)
; 0000 0274 {
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
; 0000 0275     if(f==ADD)
;PCODE: $0000040E VOL: 0
;	f -> Y+0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
; 0000 0276     {
; 0000 0277         if(dotA!=0xFF)
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
; 0000 0278         {
; 0000 0279             dotC=dotA-1;
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
; 0000 027A         }
; 0000 027B         if(dotB!=0xFF)
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
; 0000 027C         {
; 0000 027D             if(dotA==255 || dotB>dotA)
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
; 0000 027E             {
; 0000 027F                 dotC=dotB-1;
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
; 0000 0280             }
; 0000 0281 
; 0000 0282         }
;PCODE: $00000427 VOL: 0
; 0000 0283         numC=numA+numB;
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
; 0000 0284         return;
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
; 0000 0285     }
; 0000 0286     else if(f==DEC)
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
; 0000 0287     {
; 0000 0288        if(dotA!=0xFF)
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
; 0000 0289         {
; 0000 028A             dotC=dotA-1;
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
; 0000 028B         }
; 0000 028C         if(dotB!=0xFF)
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
; 0000 028D         {
; 0000 028E             if(dotA==255 || dotB>dotA)
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
; 0000 028F             {
; 0000 0290                 dotC=dotB-1;
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
; 0000 0291             }
; 0000 0292         }
;PCODE: $00000448 VOL: 0
; 0000 0293         numC=numA-numB;
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
; 0000 0294         return;
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
; 0000 0295     }
; 0000 0296     else if(f==MUL)
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
; 0000 0297     {
; 0000 0298         if(dotA!=0xFF)
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
; 0000 0299         {
; 0000 029A             dotC=dotA-1;
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
; 0000 029B         }
; 0000 029C         if(dotB!=0xFF)
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
; 0000 029D         {
; 0000 029E             dotC+=dotB-1;
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
; 0000 029F         }
; 0000 02A0         numC=numA*numB;
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
; 0000 02A1         return;
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
; 0000 02A2     }
; 0000 02A3     else if(f==DIV)
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
; 0000 02A4     {
; 0000 02A5         dotC=6;
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
; 0000 02A6         numC=numA/numB;
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
; 0000 02A7         return;
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
; 0000 02A8     }
; 0000 02A9     else if(f==EQU)
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
; 0000 02AA     {
; 0000 02AB         numC=numA;
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
; 0000 02AC         dotC=dotA;
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
; 0000 02AD         return;
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
; 0000 02AE     }
; 0000 02AF }
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;
;unsigned char printfnc(unsigned char f)
; 0000 02B2 {
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
; 0000 02B3     if(f==ADD)
;PCODE: $00000489 VOL: 0
;	f -> Y+0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
; 0000 02B4     {
; 0000 02B5         return '+';
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
; 0000 02B6     }
; 0000 02B7     else if(f==DEC)
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
; 0000 02B8     {
; 0000 02B9         return '-';
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
; 0000 02BA     }
; 0000 02BB     else if(f==MUL)
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
; 0000 02BC     {
; 0000 02BD         return '*';
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
; 0000 02BE     }
; 0000 02BF     else if(f==DIV)
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
; 0000 02C0     {
; 0000 02C1         return '/';
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
; 0000 02C2     }
; 0000 02C3     else if(f==EQU)
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
; 0000 02C4     {
; 0000 02C5         return '=';
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
; 0000 02C6     }
; 0000 02C7 
; 0000 02C8 }
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
